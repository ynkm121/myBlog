<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liu.blog.dao.BlogMapper">
    <resultMap id="BaseResultMap" type="Blog">
        <id column="blog_id" jdbcType="BIGINT" property="blogId"/>
        <result column="blog_title" jdbcType="VARCHAR" property="blogTitle"/>
        <result column="blog_sub_url" jdbcType="VARCHAR" property="blogSubUrl"/>
        <result column="blog_cover_image" jdbcType="VARCHAR" property="blogCoverImage"/>
        <result column="blog_category_id" jdbcType="INTEGER" property="blogCategoryId"/>
        <result column="blog_category_name" jdbcType="VARCHAR" property="blogCategoryName"/>
        <result column="blog_tags" jdbcType="VARCHAR" property="blogTags"/>
        <result column="blog_status" jdbcType="TINYINT" property="blogStatus"/>
        <result column="blog_views" jdbcType="BIGINT" property="blogViews"/>
        <result column="enable_comment" jdbcType="TINYINT" property="enableComment"/>
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="Blog">
        <result column="blog_content" jdbcType="LONGVARCHAR" property="blogContent"/>
    </resultMap>
    <sql id="BaseColumnList">
        blog_id, blog_title, blog_sub_url, blog_cover_image, blog_category_id, blog_category_name,
    blog_tags, blog_status, blog_views, enable_comment, is_deleted, create_time, update_time
    </sql>
    <sql id="BlobColumnList">
        blog_content
    </sql>

    <select id="getBlogsList" resultMap="BaseResultMap" parameterType="Map">
        select
            <include refid="BaseColumnList"/>
        from tb_blog
        where is_deleted = 0
        <if test="keyword != null">
            and blog_title like concat('%', #{keyword}, '%') or blog_category_name like concat('%', #{keyword}, '%')
        </if>
        <if test="blogStatus != null">
            and blog_status = #{blogStatus}
        </if>
        <if test="blogCategoryId != null">
            and blog_category_id = #{blogCategoryId}
        </if>
        order by blog_id DESC
        <if test="start != null and limit != null">
            limit #{limit} offset #{start}
        </if>
    </select>
    <select id="getBlogCounts" resultType="int">
        select count(*)
        from tb_blog
        where is_deleted = 0
        <if test="keyWords != null">
            and blog_title like concat('%', #{keyWords}, '%') or blog_category_name like concat('%', #{keyWords}, '%')
        </if>
        <if test="blogStatus != null">
            and blog_status = #{blogStatus}
        </if>
        <if test="blogCategoryId != null">
            and blog_category_id = #{blogCategoryId}
        </if>
    </select>
    <select id="getBlogListByType" resultMap="BaseResultMap">
        select *
        from tb_blog
        where is_deleted = 0
        <if test="type != null and type == 0">
            order by blog_views DESC
        </if>
        <if test="type != null and type == 1">
            order by blog_id DESC
        </if>
        limit #{limit}
    </select>
    <select id="getBlogsByTagId" resultMap="BaseResultMap" parameterType="map">
        select
            <include refid="BaseColumnList"/>
        from
            tb_blog
        where
            blog_id in (SELECT blog_id from tb_blog_tag_relation where tag_id = #{tagId})
            and is_deleted = 0
            and blog_status = 1
        order by blog_id DESC
        <if test="start != null and limit != null">
            limit #{limit} offset #{start}
        </if>
    </select>
    <select id="getBlogByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="int">
        select
            <include refid="BaseColumnList"/>
            ,
            <include refid="BlobColumnList"/>
        from
            tb_blog
        where
            blog_id = #{blogId}
    </select>
    <select id="getBlogBySubUrl" resultMap="ResultMapWithBLOBs" parameterType="string">
        select
            <include refid="BaseColumnList"/>
            ,
            <include refid="BlobColumnList"/>
        from tb_blog
        where blog_sub_url = #{subUrl} and is_deleted = 0 limit 1
    </select>
    <update id="updateByPrimaryKey" parameterType="Blog">
        update tb_blog
        set blog_title = #{blogTitle,jdbcType=VARCHAR},
            blog_sub_url = #{blogSubUrl,jdbcType=VARCHAR},
            blog_cover_image = #{blogCoverImage,jdbcType=VARCHAR},
            blog_category_id = #{blogCategoryId,jdbcType=INTEGER},
            blog_category_name = #{blogCategoryName,jdbcType=VARCHAR},
            blog_tags = #{blogTags,jdbcType=VARCHAR},
            blog_status = #{blogStatus,jdbcType=TINYINT},
            blog_views = #{blogViews,jdbcType=BIGINT},
            enable_comment = #{enableComment,jdbcType=TINYINT},
            is_deleted = #{isDeleted,jdbcType=TINYINT},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where blog_id = #{blogId,jdbcType=BIGINT};
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="Blog">
        update tb_blog
        <set>
            <if test="blogTitle != null">
                blog_title = #{blogTitle,jdbcType=VARCHAR},
            </if>
            <if test="blogSubUrl != null">
                blog_sub_url = #{blogSubUrl,jdbcType=VARCHAR},
            </if>
            <if test="blogCoverImage != null">
                blog_cover_image = #{blogCoverImage,jdbcType=VARCHAR},
            </if>
            <if test="blogContent != null">
                blog_content = #{blogContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="blogCategoryId != null">
                blog_category_id = #{blogCategoryId,jdbcType=INTEGER},
            </if>
            <if test="blogCategoryName != null">
                blog_category_name = #{blogCategoryName,jdbcType=VARCHAR},
            </if>
            <if test="blogTags != null">
                blog_tags = #{blogTags,jdbcType=VARCHAR},
            </if>
            <if test="blogStatus != null">
                blog_status = #{blogStatus,jdbcType=TINYINT},
            </if>
            <if test="blogViews != null">
                blog_views = #{blogViews,jdbcType=BIGINT},
            </if>
            <if test="enableComment != null">
                enable_comment = #{enableComment,jdbcType=TINYINT},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blogContent != null">
                blog_content = #{blogContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where blog_id = #{blogId};
    </update>
    <update id="BatchDelete">
        update tb_blog
        set is_deleted = 1
        where blog_id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>
    <insert id="insertSelective" parameterType="Blog" keyProperty="blogId" useGeneratedKeys="true">
        insert into tb_blog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="blogId != null">
                blog_id,
            </if>
            <if test="blogTitle != null">
                blog_title,
            </if>
            <if test="blogSubUrl != null">
                blog_sub_url,
            </if>
            <if test="blogCoverImage != null">
                blog_cover_image,
            </if>
            <if test="blogCategoryId != null">
                blog_category_id,
            </if>
            <if test="blogCategoryName != null">
                blog_category_name,
            </if>
            <if test="blogTags != null">
                blog_tags,
            </if>
            <if test="blogStatus != null">
                blog_status,
            </if>
            <if test="blogViews != null">
                blog_views,
            </if>
            <if test="enableComment != null">
                enable_comment,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="blogContent != null">
                blog_content,
            </if>
        </trim>
            values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="blogId != null">
                #{blogId,jdbcType=BIGINT},
            </if>
            <if test="blogTitle != null">
                #{blogTitle,jdbcType=VARCHAR},
            </if>
            <if test="blogSubUrl != null">
                #{blogSubUrl,jdbcType=VARCHAR},
            </if>
            <if test="blogCoverImage != null">
                #{blogCoverImage,jdbcType=VARCHAR},
            </if>
            <if test="blogCategoryId != null">
                #{blogCategoryId,jdbcType=INTEGER},
            </if>
            <if test="blogCategoryName != null">
                #{blogCategoryName,jdbcType=VARCHAR},
            </if>
            <if test="blogTags != null">
                #{blogTags,jdbcType=VARCHAR},
            </if>
            <if test="blogStatus != null">
                #{blogStatus,jdbcType=TINYINT},
            </if>
            <if test="blogViews != null">
                #{blogViews,jdbcType=BIGINT},
            </if>
            <if test="enableComment != null">
                #{enableComment,jdbcType=TINYINT},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blogContent != null">
                #{blogContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>


</mapper>